<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Res_谱图采集" xml:space="preserve">
    <value>Spectral acquisition</value>
  </data>
	<data name="Res_采集" xml:space="preserve">
    <value>Collect</value>
  </data>
	<data name="Res_停止" xml:space="preserve">
    <value>Stop</value>
  </data>
	<data name="Res_清空" xml:space="preserve">
    <value>Clear</value>
  </data>
	<data name="Res_核素识别" xml:space="preserve">
    <value>Nuclide Identification</value>
  </data>
	<data name="Res_核素库" xml:space="preserve">
    <value>Nuclide Library</value>
  </data>
	<data name="Res_手动稳峰" xml:space="preserve">
    <value>Manual Peak Stabilization</value>
  </data>
	<data name="Res_打开文件" xml:space="preserve">
    <value>Open File</value>
  </data>
	<data name="Res_保存文件" xml:space="preserve">
    <value>Save File</value>
  </data>
	<data name="Res_串口设置" xml:space="preserve">
    <value>Serial Port Settings</value>
  </data>
	<data name="Res_道址" xml:space="preserve">
  <value>Channel:</value>
</data>
	<data name="Res_计数" xml:space="preserve">
  <value>Count:</value>
</data>
	<data name="Res_能量" xml:space="preserve">
  <value>Energy:</value>
</data>
	<data name="Res_CPS" xml:space="preserve">
  <value>CPS:</value>
</data>
	<data name="Res_剂量率" xml:space="preserve">
  <value>Dose Rate:</value>
</data>
	<data name="Res_采集" xml:space="preserve">
  <value>Collection</value>
</data>
	<data name="Res_停止" xml:space="preserve">
  <value>Stop</value>
</data>
	<data name="Res_清空" xml:space="preserve">
  <value>Clear</value>
</data>
	<data name="Res_串口设置" xml:space="preserve">
  <value>Serial Port Settings</value>
</data>
	<data name="Res_开始时间" xml:space="preserve">
  <value>Start Time:</value>
</data>
	<data name="Res_采集时间" xml:space="preserve">
  <value>Collection Time(s):</value>
</data>
	<data name="Res_CPS阈值设置" xml:space="preserve">
  <value>CPS Threshold Setting:</value>
</data>
	<data name="Res_检索" xml:space="preserve">
  <value>Search</value>
</data>
	<data name="Res_计数率监测" xml:space="preserve">
  <value>Count Rate Monitoring</value>
</data>
	<data name="Res_测量活度" xml:space="preserve">
  <value>Activity Measurement</value>
</data>
	<data name="Res_核素活度刻度因子" xml:space="preserve">
  <value>Nuclide Activity Calibration Factor</value>
</data>
	<data name="Res_选择要识别的核素" xml:space="preserve">
  <value>Select Nuclides for Identification</value>
</data>
	<data name="Res_串口号" xml:space="preserve">
  <value>Serial Port Number</value>
</data>
	<data name="Res_扫描串口" xml:space="preserve">
  <value>Scan Serial Port</value>
</data>
	<data name="Res_停止位" xml:space="preserve">
  <value>Stop Bit</value>
</data>
	<data name="Res_波特率" xml:space="preserve">
  <value>Baud Rate</value>
</data>
	<data name="Res_校验位" xml:space="preserve">
  <value>Parity Bit</value>
</data>
	<data name="Res_数据位" xml:space="preserve">
  <value>Data Bits</value>
</data>
	<data name="Res_打开串口" xml:space="preserve">
  <value>Open Serial Port</value>
</data>
	<data name="Res_关闭串口" xml:space="preserve">
  <value>Close Serial Port</value>
</data>
	<data name="Res_串口已关闭" xml:space="preserve">
  <value>Serial Port Closed</value>
</data>
	<data name="Res_串口已打开" xml:space="preserve">
  <value>Serial Port Opened</value>
</data>
	<data name="Res_提示" xml:space="preserve">
  <value>Note</value>
</data>
	<data name="Res_核素库" xml:space="preserve">
  <value>Nuclide Library</value>
</data>
	<data name="Res_搜索核素名称" xml:space="preserve">
  <value>Search Nuclide Name:</value>
</data>
	<data name="Res_核素名称" xml:space="preserve">
  <value>Nuclide Name</value>
</data>
	<data name="Res_半衰期" xml:space="preserve">
  <value>Half-life</value>
</data>
	<data name="Res_核素能量分支" xml:space="preserve">
  <value>Nuclide Energy Branches</value>
</data>
	<data name="Res_最小分支比" xml:space="preserve">
  <value>Minimum Branching Ratio:</value>
</data>
	<data name="Res_能量" xml:space="preserve">
  <value>Energy (keV)</value>
</data>
	<data name="Res_分支比" xml:space="preserve">
  <value>Branching Ratio</value>
</data>
	<data name="Res_添加" xml:space="preserve">
  <value>Add</value>
</data>
	<data name="Res_当前核素列表" xml:space="preserve">
  <value>Current Nuclide List</value>
</data>
	<data name="Res_删除" xml:space="preserve">
  <value>Delete</value>
</data>
	<data name="Res_重置" xml:space="preserve">
  <value>Reset</value>
</data>
	<data name="Res_保存" xml:space="preserve">
  <value>Save</value>
</data>
	<data name="Res_所在核素库" xml:space="preserve">
  <value>Current Nuclide Library</value>
</data>
	<data name="Res_添加到核素库" xml:space="preserve">
  <value>Which nuclide library would you like to add this information to?</value>
</data>
	<data name="Res_选择使用中的核素库" xml:space="preserve">
  <value>Select the library in use:</value>
</data>
	<data name="Res_自定义新核素库名称" xml:space="preserve">
  <value>Customize new library name:</value>
</data>
	<data name="Res_确定" xml:space="preserve">
  <value>Confirm</value>
</data>
	<data name="Res_取消" xml:space="preserve">
  <value>Cancel</value>
</data>
	<data name="Res_加载成功" xml:space="preserve">
    <value>Load successfully!</value>
  </data>
	<data name="Res_加载失败" xml:space="preserve">
    <value>Failed to load!</value>
  </data>
	<data name="Res_详情" xml:space="preserve">
    <value>Detail</value>
  </data>
	<data name="Res_未识别" xml:space="preserve">
    <value>Unidentified</value>
  </data>
</root>